# Copyright 2023 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#to manually trigger from gcloud
# gcloud builds submit --config=deploy.yaml --project=project-name --region=us-west1

steps:
  - name: gcr.io/cloud-builders/git
    args:
      - clone
      - 'https://github.com/mtalreja16/google-cloud-application-integration.git'
    id: pull the code
  - name: gcr.io/cloud-builders/docker
    args:
      - build
      - '-t'
      - 'gcr.io/$PROJECT_ID/reservation-app:latest'
      - >-
        google-cloud-application-integration/Samples/cymbal-van-rental/src/frontend
  - name: gcr.io/cloud-builders/docker
    args:
      - push
      - 'gcr.io/$PROJECT_ID/reservation-app:latest'

  - id: 'Create connections if not present'
    name: ghcr.io/srinandan/integrationcli-builder:latest
    entrypoint: 'bash'
    args:
      - -c
      - |
        gcloud auth print-access-token > /tmp/token
        /tmp/integrationcli prefs set integrationcli prefs set --nocheck=true --apigee-integration=false --reg=$LOCATION --proj=$PROJECT_ID
        /tmp/integrationcli token cache -t $(cat /tmp/token)
        #find connection
        for connection in $(find  google-cloud-application-integration/Samples/cymbal-van-rental/connectors/* -type f);
        do
          sed -i "s/PROJECT_ID/$PROJECT_ID/g" $connection
          sed -i "s/LOCATION/$LOCATION/g" $connection
          conname=$(basename ${connection%.*})
          /tmp/integrationcli connectors get -n $conname;
          echo $? >/tmp/$conname
          echo "status_code_content" $(cat /tmp/$conname)
          if [ $(cat /tmp/$conname) -ne 0 ]; then       
            echo "create connector"
            
            set -e
            /tmp/integrationcli connectors create -n $conname -f $connection --wait=true
          fi
        done;
  - id: 'Create and publish the integration version'
    name: ghcr.io/srinandan/integrationcli-builder:latest
    entrypoint: 'bash'
    args:
      - -c
      - |
        set -e
        gcloud auth print-access-token > /tmp/token
        /tmp/integrationcli prefs set integrationcli prefs set --nocheck=true --apigee-integration=false --reg=$LOCATION --proj=$PROJECT_ID
        /tmp/integrationcli token cache -t $(cat /tmp/token)
        for file in $(find google-cloud-application-integration/Samples/cymbal-van-rental/src/Integration/* -type f ! -name overrides.json);
        do 
          echo  > /tmp/name
          echo  $file > /tmp/filename
          /tmp/integrationcli integrations create -n $(cat /tmp/name) -f $(cat /tmp/filename) -o google-cloud-application-integration/Samples/cymbal-van-rental/src/Integration/$(cat /tmp/name)/overrides.json -u $SHORT_SHA > /tmp/response
          echo "integration response: " $(cat /tmp/response)
          basename $(cat /tmp/response | jq -r .name) > /tmp/version
          echo "integration version: " $(cat /tmp/version)
          /tmp/integrationcli integrations versions publish -n $(cat /tmp/name) -v $(cat /tmp/version)
        done;
#the name of the service account  to use when setting up the connector
options:
  logging: CLOUD_LOGGING_ONLY
substitutions:
  _KMS_KEY_NAME: appint_key
  _SERVICE_ACCOUNT_NAME: reservation-demo@dynolab-integration.iam.gserviceaccount.com
  _KMS_RING_NAME: appint_keyring
